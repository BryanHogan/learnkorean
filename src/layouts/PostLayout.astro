---
import BaseLayout from "./BaseLayout.astro";
import type { CollectionEntry } from "astro:content";
import { Image } from "astro:assets";
import TableOfContentsList from "../components/TableOfContents/TableOfContentsList.astro";
import { generateToC } from "../components/TableOfContents/generateToC";

interface Props {
	post: CollectionEntry<"chapters">;
}
const { post } = Astro.props;
const { headings } = await post.render();
const { remarkPluginFrontmatter } = await post.render();
import menuIcon from "/src/assets/icons/Menu-Icon.svg";
import { Icons } from "../components/Icons";
---

<BaseLayout title={post.data.title} metaDescription={post.data.description}>
	<meta property="og:image" content={post.data.cover.src} slot="head" />
	<meta property="og:image:alt" content={post.data.description} slot="head" />
	<section>
		<div class="center-container">
			<Image
				src={post.data.cover as ImageMetadata}
				alt={post.data.coverAlt}
				class="cover-image"
				width={1600}
				height={900}
			/>
			<h1 id="_top">{post.data.title}</h1>
			<div class="text-section">
				<p>
					{post.data.title} â€” {remarkPluginFrontmatter.minutesRead} minutes
					reading time.
				</p>
				<slot />
			</div>
		</div>
		<aside>
			<div class="toc">
				<svg
					class="toc-dropdown-icon"
					width="24"
					height="24"
					viewBox="0 0 24 24"
					fill="currentColor"
					set:html={Icons["magnifier"]}
				/>
				<div class="toc-items">
					<p><strong>Table Of Contents</strong></p>
					<TableOfContentsList
						toc={generateToC(headings, {
							minHeadingLevel: 1,
							maxHeadingLevel: 6,
							title: post.data.title,
						})}
					/>
				</div>
			</div>
		</aside>
	</section>
</BaseLayout>

<style>
	:global(h1),
	:global(h2),
	:global(h3) {
		scroll-margin-top: var(--navbar-height);
	}
	section {
		display: flex;
		justify-content: center;
		margin-inline: auto;
		max-width: 1300px;
		flex-wrap: wrap;
	}
	.center-container {
		display: flex;
		flex-direction: column;
		align-items: center;
		flex-wrap: wrap;
		max-width: 750px;
		flex-grow: 1;
	}
	.cover-image {
		width: 100%;
		max-width: 675px; /* same as media query down below */
		height: auto;
		margin-top: 1rem;
		margin-bottom: 4rem;
		border-radius: 1rem;
	}
	aside {
		position: relative;
	}
	.toc {
		position: fixed;
		z-index: 10;
	}
	.toc-dropdown-icon {
		display: none;
		margin-left: auto;
	}
	@media only screen and (max-width: 675px) {
		.cover-image {
			border-radius: 0;
		}
	}
	@media only screen and (max-width: 699px) {
		.toc-dropdown-icon {
			display: block;
		}
		.toc .toc-items {
			display: none;
		}
		.toc:hover .toc-items {
			display: block;
		}
		.toc {
			position: fixed;
			top: calc(var(--navbar-height) + 1rem);
			right: 0;
			padding-right: 0.5rem;
			
			border: 1px solid red;
			background-color: red;
			border-radius: 1rem 0 0 1rem;
		}
		.toc-items {
			padding-left: 0.5rem;
			padding-bottom: 1rem;
		}
		.aside * {
			background-color: red;
			padding: 0.5rem;
			border-radius: 1rem;
		}
	}
</style>
