---
import BaseLayout from "./BaseLayout.astro";
import type { CollectionEntry } from "astro:content";
import { Image } from "astro:assets";
import TableOfContentsList from "../components/TableOfContents/TableOfContentsList.astro";
import { generateToC } from "../components/TableOfContents/generateToC";
import { Icons } from "../components/Icons";

interface Props {
	post: CollectionEntry<"chapters"> | CollectionEntry<"posts">;
}
const { post } = Astro.props;
const { headings } = await post.render();
const { remarkPluginFrontmatter } = await post.render();
---

<BaseLayout title={post.data.title} metaDescription={post.data.description}>
	<meta property="og:image" content={post.data.cover.src} slot="head" />
	<meta property="og:image:alt" content={post.data.description} slot="head" />
	<section>
		<div class="center-container">
			<Image
				src={post.data.cover as ImageMetadata}
				alt={post.data.coverAlt}
				class="cover-image"
				width={1600}
				height={900}
			/>
			<div class="text-section modern-container post-content-container">
				<h1 id="_top" class="text-align-center">{post.data.title}</h1>
				<slot />
			</div>
		</div>
		<aside>
			<div class="toc">
				<svg
					class="toc-dropdown-icon"
					width="26"
					height="26"
					viewBox="0 0 24 24"
					fill="currentColor"
					set:html={Icons["magnifier"]}
				/>
				<div class="toc-items">
					<p><strong>Table Of Contents</strong></p>
					<TableOfContentsList
						toc={generateToC(headings, {
							minHeadingLevel: 1,
							maxHeadingLevel: 6,
							title: post.data.title,
						})}
					/>
				</div>
			</div>
		</aside>
	</section>
</BaseLayout>
<style>
	:global(h1),
	:global(h2),
	:global(h3),
	:global(h4),
	:global(h5),
	:global(h6) {
		scroll-margin-top: var(--navbar-height);
	}
	section {
		display: flex;
		justify-content: center;
		margin-inline: auto;
		max-width: 1300px;
		flex-wrap: wrap;
	}
	.center-container {
		display: flex;
		flex-direction: column;
		align-items: center;
		flex-wrap: wrap;
		max-width: 750px;
		flex-grow: 1;
   		overflow-x: hidden;
	}

	.post-content-container {
        & :global(h1) {
            text-wrap: balance;
        }
        & :global(h2) {
            word-break: break-word;
			text-decoration: underline;
			text-decoration-color: var(--color-accent-1);
        }
        & :global(h3) {
            word-break: break-word;
        }
        & :global(img) {
            object-fit: scale-down;
            max-width: 100%;
            height: auto;
            border-radius: 0.25rem;
			margin-inline: auto;
        }
        & :global(ol), & :global(ul){
            word-break: break-word;
			padding-inline-start: 1.5rem;
			max-width: 100%;
        }
        & :global(blockquote) {
            border-left: 2px solid var(--color-accent-1);
            padding: 0.75em 1em 0.75em 1.25em;
            border-radius: 0 0.5rem 0.5rem 0;
            background-color: var(--color-main-2);
            & :global(footer) {
                margin-top: 0.5em;
            }
        }
        & :global(table) {
            border-collapse: collapse;
            width: fit-content;
			max-width: 100%;
            border: 2px solid var(--color-side-1);
            display: block;
			margin-inline: auto;
            overflow-x: auto;
            & :global(td) {
                border: 1px solid var(--color-side-1);
                padding-block: 12px;
                padding-inline: 8px;
            }
            & :global(th) {
                border: 1px solid var(--color-side-1);
                padding: 12px;
            }
            & :global(tbody) :global(tr:nth-child(odd)) {
                background-color: var(--color-main-2);
                background-color: color-mix(
                    in srgb,
                    var(--color-accent-1) 20%,
                    transparent
                );
            }
			& :global(tr td:first-of-type) {
				padding-inline: 1em;
			}
        }
		& :global(#footnote-label) {
			font-size: 1.4em;
			text-decoration: none;
			padding-bottom: 0.4em;
		}
    }

	.cover-image {
		width: 100%;
		max-width: 675px; /* same as media query down below */
		height: auto;
		margin-top: 1rem;
		margin-bottom: 4rem;
		border-radius: 1rem;
	}
	aside {
		position: relative;
	}
	.toc {
		position: fixed;
		z-index: 10;
	}
	.toc-dropdown-icon {
		display: none;
		margin-left: auto;
		padding: 3px;
	}
	@media only screen and (max-width: 675px) {
		.cover-image {
			border-radius: 0;
		}
	}
	@media only screen and (max-width: 1200px) {
		.toc-dropdown-icon {
			display: block;
		}
		.toc .toc-items {
			display: none;
		}
		.toc:hover .toc-items {
			display: block;
		}
		.toc {
			position: fixed;
			top: calc(var(--navbar-height) + 1rem);
			right: 0;
			padding-right: 0.5rem;
			background-color: var(--color-main-1);
			background-color: color-mix(in srgb, var(--color-main-1) 90%, transparent);
			backdrop-filter: blur(0.15rem);
			border-radius: 1rem 0 0 1rem;
			
		}
		.toc-items {
			padding-left: 0.5rem;
			padding-bottom: 1rem;
			min-width: 80vw;
		}
		aside, .toc {
			z-index: 1;
		}
	}
</style>
