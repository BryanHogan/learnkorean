---
interface Props {
    buttonStyle: string;
    href: string;
    text: string;
    targetText?: string;
}
const { buttonStyle = "_self", href, text, targetText } = Astro.props;
// Color styles: side-color, gradient, accent-color
// Size styles: large
// Animation styles: grow
// | Optional Additions: fixed-medium-width
---

<a href={href} class={buttonStyle} target={targetText}>{text}</a>

<style>
    a {
        border-radius: 0.5rem;
        text-decoration: none;
        display: flex;
        width: max-content;
        text-align: center;
        justify-content: center;
        align-items: center;
        word-wrap: break-word;
        max-width: 100%;
    }

    /* ################ Color Styles ################ */
    .side-color {
        color: var(--color-main-1);
        background-color: var(--color-side-1);
        box-shadow: var(--box-shadow);
    }
    .gradient {
        color: var(--color-side-1);
        background-image: var(--gradient);
        text-shadow: var(--text-shadow);
        box-shadow: var(--box-shadow);
    }
    .accent-color {
        color: var(--color-accent-1);
        background-image: var(--color-main-1);
        text-shadow: var(--text-shadow);
        box-shadow: var(--box-shadow);
    }

    /* ################ Size Styles ################ */
    .large {
        font-size: 1.3rem;
        padding: 0.5em 1em;
        margin: 0.5em 0.5em;
        font-weight: 600;
    }
    .medium {
        font-size: 1.125rem;
        padding: 0.5em 1em;
        margin: 0.5em 0.5em;
        font-weight: 600;
    }
    
    /* ################ Animation Styles ################ */
    .grow {
        transition: transform 200ms linear;
        &:hover {
            opacity: 0.8;
            transition: transform 100ms linear;
            transform: scale(1.1) translate3d(0, 0, 0) perspective(1px);
        }
    }
    /* ################ Additional ################ */
    .fixed-medium-width {
        width: 6em;
    }
</style>
